<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Anime Downloader - Settings</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="settings.css" />
  </head>
  <body>
    <nav class="navbar fixed-top navbar-expand-lg navbar-dark bg-dark">
      <button
        class="navbar-toggler"
        type="button"
        data-toggle="collapse"
        data-target="#navbarTogglerDemo01"
        aria-controls="navbarTogglerDemo01"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
        <a class="navbar-brand" href="/">Anime Downloader</a>
        <a class="navbar-brand" href="/manga">Manga Downloader</a>
        <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
          <li class="nav-item">
            <a class="nav-link" href="/log">logs</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/downloads">Downloads</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/setting">Setting</a>
          </li>
        </ul>
      </div>
    </nav>
    <div id="overlay" class="overlay" style="display: none"></div>
    <div class="container">
      <h1>Settings</h1>
      <form class="settings" onsubmit="submitSettings(event)">
        <!-- Mal selection -->
        <% if (url) { %>
          <button type="button" class="btn btn-outline-info" onclick="redirectToUrl('<%= url %>')">Connect To My Anime List</button>
        <% } else { %>
          <button type="button" class="btn btn-outline-danger" onclick="redirectToUrl('/mal/logout')">Logout</button>
          <br />
          <br />
          <div class="mb-3" id="status">
            <label for="malstatus" class="form-label">Auto Update Anime Status To</label>
            <select class="form-select form-select-lg mb-3" id="malstatus">
              <option value="plan_to_watch" <% if (settings.status === "plan_to_watch") { %> selected <% } %>>plan to watch</option>
              <option value="watching" <% if (settings.status === "watching") { %> selected <% } %>>watching</option>
              <option value="dropped" <% if (settings.status === "dropped") { %> selected <% } %>>dropped</option>
              <option value="completed" <% if (settings.status === "completed") { %> selected <% } %>>completed</option>
              <option value="on_hold" <% if (settings.status === "on_hold") { %> selected <% } %>>on hold</option>
            </select>
          </div>
          <div class="mb-3" id="autotrack">
            <label for="malautotrack" class="form-label">Auto Track Downloaded Anime As Watched</label>
            <select class="form-select form-select-lg mb-3" id="malautotrack">
              <option value="off" <% if (settings.autotrack === "off" || !settings.autotrack) { %> selected <% } %>>OFF</option>
              <option value="on" <% if (settings.autotrack === "on") { %> selected <% } %>>ON</option>
            </select>
          </div>
        <% } %>
        <br />
        <br />

        <!-- Quality selection -->
        <div class="mb-3">
          <label for="quality" class="form-label">Download Quality</label>
          <select class="form-select form-select-lg mb-3" id="quality">
            <option value="1080p" <% if (settings.quality === "1080p") { %> selected <% } %>>1080p</option>
            <option value="720p" <% if (settings.quality === "720p") { %> selected <% } %>>720p</option>
            <option value="360p" <% if (settings.quality === "360p") { %> selected <% } %>>360p</option>
          </select>
        </div>

        <!-- Custom Download Location -->
        <div class="mb-3">
          <label for="customDownloadLocation" class="form-label">Custom Download Location</label>
          <input
            type="text"
            class="form-control"
            id="customDownloadLocation"
            placeholder="Enter your custom download path"
            value="<%= settings.CustomDownloadLocation !== null ? settings.CustomDownloadLocation : '' %>"
          />
        </div>  

        <!-- Anime Provider selection -->
        <div class="mb-3">
          <label for="providerSelect" class="form-label">Anime Provider</label>
          <select
            class="form-select"
            id="providerSelect"
            onchange="toggleSubtitleOption()"
          >
            <option value="gogo" <% if (settings.provider === "gogo") { %> selected <% } %>>Gogo</option>
            <option value="zoro" <% if (settings.provider === "zoro") { %> selected <% } %>>Zoro</option>
            <option value="pahe" <% if (settings.provider === "pahe") { %> selected <% } %>>Pahe</option>
          </select>
        </div>

        <!-- SubDub Option ( visible for Pahe provider only ) -->
         <div class="mb-3" id="subDubOption" style="display: none;">
          <label for="subDub" class="form-label">SubDub Option</label>
          <select class="form-select" id="subDub">
            <option value="sub" <% if (settings.subDub === "sub" || !settings.subDub) { %> selected <% } %>>Sub</option>
            <option value="dub" <% if (settings.subDub === "dub") { %> selected <% } %>>Dub</option>
          </select>
        </div>

        <!-- Subtitle Merge option (visible for Zoro provider only) -->
        <div class="mb-3" id="subtitleOption" style="display: none">
          <label for="mergeSubtitles" class="form-label"
            >Merge Subtitles</label
          >
          <select class="form-select" id="mergeSubtitles">
            <option value="on" <% if (settings.mergeSubtitles === "on") { %> selected <% } %>>ON</option>
            <option value="off" <% if (settings.mergeSubtitles === "off") { %> selected <% } %>>OFF</option>
          </select>
        </div>

        <!-- Subtitle Format option (visible for Zoro provider and Merge Subtitles = OFF only) -->
         <div class="mb-3" id="subtitleFormatOption" style="display: none">
          <label for="subtitleFormat" class="form-label">Subtitles Format</label>
          <select class="form-select" id="subtitleFormat">
            <option value="ttv" <% if (settings.subtitleFormat === "ttv") { %> selected <% } %>>TTV</option>
            <option value="srt" <% if (settings.subtitleFormat === "srt") { %> selected <% } %>>SRT</option>
          </select>
        </div>

        <!-- Pagination -->
        <div class="mb-3" id="PaginationOption">
          <label for="Pagination" class="form-label">Pagination</label>
          <select class="form-select form-select-lg mb-3" id="Pagination">
            <option value="off" <% if (settings.Pagination === "off" || !settings.Pagination) { %> selected <% } %>>OFF</option>
            <option value="on" <% if (settings.Pagination === "on") { %> selected <% } %>>ON</option>
          </select>
        </div>

        <!-- Concurrent Downloads -->
        <div class="mb-3">
          <label for="concurrentDownloads" class="form-label">Concurrent Downloads</label>
          <input
            type="number"
            class="form-control"
            id="concurrentDownloads"
            placeholder="Enter the number of concurrent downloads"
            value="<%= settings.concurrentDownloads !== null ? settings.concurrentDownloads : 5 %>"
            min="1"
            step="1"
          />
        </div>
        
        <button type="submit" class="btn btn-primary">Update</button>
      </form>
    </div>

    <div id="loading" class="loader" hidden></div>

    <script
      src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"
      crossorigin="anonymous"
    ></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script>
      function submitSettings(event) {
        event.preventDefault();

        const statusElement = document.getElementById("malstatus");
        const qualityElement = document.getElementById("quality");
        const autotrackElement = document.getElementById("malautotrack");
        const customDownloadLocationElement = document.getElementById(
          "customDownloadLocation"
        );
        const Pagination = document.getElementById("Pagination");
        const concurrentDownloadsElement = document.getElementById("concurrentDownloads");

        const providerElement = document.getElementById("providerSelect");
        const mergeSubtitlesElement = document.getElementById("mergeSubtitles");
        const subtitleFormatElement = document.getElementById("subtitleFormat");
        const subDubElement = document.getElementById("subDub");  

        const data = {
          status: statusElement ? statusElement.value : null,
          quality: qualityElement ? qualityElement.value : null,
          autotrack: autotrackElement ? autotrackElement.value : null,
          CustomDownloadLocation: customDownloadLocationElement
            ? customDownloadLocationElement.value
            : null,
          provider: providerElement ? providerElement.value : null,
          mergeSubtitles:
            providerElement.value === "zoro" && mergeSubtitlesElement
              ? mergeSubtitlesElement.value
              : null,
          subtitleFormat: providerElement.value === "zoro" && mergeSubtitlesElement.value === "off" && subtitleFormatElement ? subtitleFormatElement.value : null,
          Pagination: Pagination ? Pagination.value : null,
          concurrentDownloads: concurrentDownloadsElement
            ? concurrentDownloadsElement.value
            : null,
          subDub: subDubElement ? subDubElement.value : null, 
        };

        showLoadingAnimation();

        fetch("/api/settings", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        })
          .then((response) => {
            return response.json();
          })
          .then((data) => {
            hideLoadingAnimation();
            if (data.message) {
              swal("Updated Your User Config", data.message, "success");
            } else {
              swal("Something Is Missing", data.error, "error");
            }
          });
      }

      function showLoadingAnimation() {
        const overlay = document.getElementById("overlay");
        overlay.style.display = "block";
        document.getElementById("loading").removeAttribute("hidden");
      }

      function hideLoadingAnimation() {
        const overlay = document.getElementById("overlay");
        overlay.style.display = "none";
        document.getElementById("loading").setAttribute("hidden", true);
      }

      function toggleSubtitleOption() {
        const providerElement = document.getElementById("providerSelect");
        const mergeSubtitlesElement = document.getElementById("mergeSubtitles");
        const subtitleOptionElement = document.getElementById("subtitleOption");
        const subtitleFormatOptionElement = document.getElementById("subtitleFormatOption");
        const subDubOptionElement = document.getElementById("subDubOption");


        subtitleOptionElement.style.display = providerElement.value === "zoro" ? "block" : "none";
        
        if (providerElement.value === "zoro" && mergeSubtitlesElement.value === "off") {
          subtitleFormatOptionElement.style.display = "block";
        } else {
          subtitleFormatOptionElement.style.display = "none";
        }

        subDubOptionElement.style.display = providerElement.value === "pahe" ? "block" : "none";
      }
      document.getElementById("mergeSubtitles")?.addEventListener("change", toggleSubtitleOption);
      document.addEventListener("DOMContentLoaded", toggleSubtitleOption);
    </script>
  </body>
</html>
