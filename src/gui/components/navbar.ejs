<aside class="sidebar collapsed">
  <header class="sidebar-header">
    <a href="/" class="header-logo">
      <img src="/images/logo.webp" alt="profile-logo" />
    </a>

    <button class="toggler sidebar-toggler" onclick="toggleSidebar()">
      <span class="material-symbols-rounded">Menu</span>
    </button>
  </header>

  <nav class="sidebar-nav">
    <ul class="nav-list primary-nav">
      <li class="nav-item">
        <div class="sidebar-search" onclick="toggleSidebar()">
          <span class="nav-icon material-symbols-rounded left">search</span>
          <input
            type="text"
            id="sidebar-search-input"
            placeholder="Search..."
            class="search-input"
            onkeypress="performSearch(event)"
          />
        </div>
      </li>
      <li class="nav-item" id="back-button" style="display: none">
        <a class="nav-link">
          <span class="nav-icon material-symbols-rounded">arrow_back</span>
          <span class="nav-label">Back</span>
        </a>
        <span class="nav-tooltip">Back</span>
      </li>
      <li class="nav-item">
        <a href="/local/anime" class="nav-link">
          <span class="nav-icon material-symbols-rounded">local_library</span>
          <span class="nav-label">Local Anime</span>
        </a>
        <span class="nav-tooltip">Local Anime</span>
      </li>
      <li class="nav-item">
        <a href="/local/manga" class="nav-link">
          <span class="nav-icon material-symbols-rounded">library_books</span>
          <span class="nav-label">Local Manga</span>
        </a>
        <span class="nav-tooltip">Local Manga</span>
      </li>
      <li class="nav-item">
        <a href="/mal/anime" class="nav-link" id="mal">
          <span class="nav-icon material-symbols-rounded">subscriptions</span>
          <span class="nav-label">Mal Library</span>
        </a>
        <span class="nav-tooltip">Mal Library</span>
      </li>
      <li class="nav-item">
        <a href="/anime" class="nav-link">
          <span class="nav-icon material-symbols-rounded">movie</span>
          <span class="nav-label">Anime</span>
        </a>
        <span class="nav-tooltip">Anime</span>
      </li>
      <li class="nav-item">
        <a href="/manga" class="nav-link">
          <span class="nav-icon material-symbols-rounded">menu_book</span>
          <span class="nav-label">Manga</span>
        </a>
        <span class="nav-tooltip">Manga</span>
      </li>
      <li class="nav-item">
        <a href="/downloads" class="nav-link">
          <span class="nav-icon material-symbols-rounded">download</span>
          <span class="nav-label">Downloads</span>
        </a>
        <span class="nav-tooltip">Downloads</span>
      </li>
      <li class="nav-item">
        <a href="/log" class="nav-link">
          <span class="nav-icon material-symbols-rounded">history</span>
          <span class="nav-label">Logs</span>
        </a>
        <span class="nav-tooltip">Logs</span>
      </li>
      <li class="nav-item">
        <a href="/setting" class="nav-link">
          <span class="nav-icon material-symbols-rounded">settings</span>
          <span class="nav-label">Settings</span>
        </a>
        <span class="nav-tooltip">Settings</span>
      </li>
    </ul>
  </nav>
</aside>
<script src="/js/libs/sweetalert.js"></script>
<script>
  let MalConnected = "<%= MalLoggedIn %>" === "true";

  if (!MalConnected) document.getElementById("mal").style.display = "none";

  document.addEventListener("click", (event) => {
    const sidebar = document.querySelector(".sidebar");
    const sidebarToggler = document.querySelector(".sidebar-toggler");
    const sidebarSearch = document.querySelector(".sidebar-search");
    const inputField = document.getElementById("sidebar-search-input");

    if (
      !sidebar.contains(event.target) &&
      !sidebarToggler.contains(event.target) &&
      !sidebarSearch.contains(event.target)
    ) {
      sidebar.classList.add("collapsed");
      sidebarSearch.classList.remove("show-input");
      sidebarSearch.onclick = toggleSidebar;
      inputField.value = "";
    }
  });

  function toggleSidebar() {
    const sidebar = document.querySelector(".sidebar");
    const sidebarSearch = document.querySelector(".sidebar-search");
    const inputField = document.getElementById("sidebar-search-input");

    sidebar.classList.toggle("collapsed");
    if (sidebar.classList.contains("collapsed")) {
      sidebarSearch.classList.remove("show-input");
      sidebarSearch.onclick = toggleSidebar;
      inputField.value = "";
    } else {
      sidebarSearch.classList.add("show-input");
      sidebarSearch.onclick = null;
    }
  }

  function performSearch(event) {
    const sidebar = document.querySelector(".sidebar");
    const sidebarSearch = document.querySelector(".sidebar-search");
    const inputField = document.getElementById("sidebar-search-input");

    if (event.key === "Enter") {
      if (!sidebar.classList.contains("collapsed")) {
        const isMangaPage =
          window.location.pathname.includes("/manga") ||
          window.location.search.includes("?mangatosearch");

        const searchType = isMangaPage ? "mangatosearch" : "animetosearch";

        const query = inputField.value.trim();
        if (!query) {
          Swal.fire({
            icon: "error",
            title: "Sync In Process",
            text: "Please enter some text to search",
          });
          return;
        }
        window.location.href = `/search?${searchType}=${encodeURIComponent(
          query
        )}`;
      }
    } else {
      if (sidebar.classList.contains("collapsed")) {
        sidebar.classList.remove("collapsed");
        sidebarSearch.classList.add("show-input");
        inputField.focus();
      }
    }
  }

  // Handle Back Button
  async function HandelBackButtons() {
    try {
      let history = await window.sharedStateAPI.get();

      // Handling Back Button Click
      if (history?.length >= 1) {
        const backButton = document.getElementById("back-button");
        backButton.style.display = "block";

        document.addEventListener("click", async (event) => {
          const link = event.target.closest("#back-button .nav-link");
          if (link) {
            try {
              let history = await window.sharedStateAPI.get();
              const currentPage =
                window.location.pathname + window.location.search;
              if (history[history.length - 1] === currentPage) {
                history.pop();
              }
              const previousPage = history.pop();
              await window.sharedStateAPI.set(history);
              if (previousPage) {
                window.location.href = previousPage;
              } else {
                console.warn("No previous page in history.");
              }
            } catch (err) {
              console.error("Error handling back button click:", err);
            }
          }
        });
      }

      // Adding Current Page
      const CurrentPage = window.location.pathname + window.location.search;
      if (history[history.length - 1] !== CurrentPage) {
        history.push(CurrentPage);
      }
      await window.sharedStateAPI.set(history);
    } catch (err) {
      console.log("Error while adding back button", err);
    }
  }

  HandelBackButtons();
</script>
