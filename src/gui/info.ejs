<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Anime Downloader</title>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css"
      integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N"
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="info.css" />
    <link rel="stylesheet" href="./video_player/video-js.css" />
    <link href="video_player/quality.css" rel="stylesheet" />
    <style>
      .vjs-icon-placeholder {
        font-size: 10px;
      }
    </style>
  </head>
  <body>
    <nav class="navbar fixed-top navbar-expand-lg navbar-dark bg-dark">
      <button
        class="navbar-toggler"
        type="button"
        data-toggle="collapse"
        data-target="#navbarTogglerDemo01"
        aria-controls="navbarTogglerDemo01"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarTogglerDemo01">
        <a class="navbar-brand" href="/">Anime Downloader</a>
        <a class="navbar-brand" href="/manga">Manga Downloader</a>
        <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
          <li class="nav-item">
            <a class="nav-link" href="/log">logs</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/downloads">Downloads</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/setting">Setting</a>
          </li>
        </ul>
        <form class="form-inline my-2 my-lg-0">
          <input
            class="form-control mr-sm-2"
            type="search"
            id="searchInput"
            placeholder="Search for Anime"
            aria-label="Search"
          />
          <button
            class="btn btn-outline-info"
            type="submit"
            onclick="search(event)"
          >
            Search
          </button>
          <button
            onclick="goBack()"
            class="btn btn-outline-info"
            style="margin-left: 5px"
          >
            Back
          </button>
        </form>
      </div>
    </nav>

    <!-- Modal -->
    <div
      class="modal fade"
      id="downloadModal"
      tabindex="-1"
      role="dialog"
      aria-labelledby="downloadModalLabel"
      aria-hidden="true"
    >
      <div
        class="modal-dialog modal-dialog-centered"
        role="document"
        style="color: black"
      >
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="downloadModalLabel">
              Download Episodes
            </h5>
            <button
              type="button"
              class="btn-close"
              data-bs-dismiss="modal"
              aria-label="Close"
            >
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <form id="download-form">
              <div class="form-group">
                <label for="start-episode">Start Episode:</label>
                <input
                  type="number"
                  class="form-control"
                  id="start-episode"
                  name="start-episode"
                  min="1"
                  required
                />
              </div>
              <div class="form-group">
                <label for="end-episode">End Episode:</label>
                <input
                  type="number"
                  class="form-control"
                  id="end-episode"
                  name="end-episode"
                  min="1"
                  max="<%= data.totalEpisodes %>"
                  required
                />
              </div>
              <button type="submit" class="btn btn-primary">Download</button>
            </form>
          </div>
        </div>
      </div>
    </div>
    <!-- End Modal -->
    <div class="container-fluid">
      <div class="anime-info">
        <div class="anime-info-left">
          <img
            class="anime-image"
            src="<%= data.image %>"
            alt="<%= data.title %>"
          />

          <div class="additional-info">
            Type : <%= data.type %> ( <%= data.subOrDub ? data.subOrDub :
            "UNKNOWN" %> )
            <br />
            Total Episodes: <%= data?.totalEpisodes %>
            <br />
            <%= data?.status ? `Status: ${data?.status}` : "" %> <% if
            (data?.status) { %>
            <br />
            <% } %> <%= data?.subs > 0 ? `Subs Episodes: ${data.subs}` : "" %>
            <% if (data?.subs > 0) { %>
            <br />
            <% } %> <%= data?.dubs > 0 ? `Dubs Episodes: ${data.dubs}` : "" %>
            <% if (data?.dubs > 0) { %>
            <br />
            <% } %>
          </div>
        </div>
        <div class="anime-info-right">
          <div class="anime-title font"><%= data.title %></div>
          <div class="description"><%= data.description %></div>
          <div class="genres">
            <% data?.genres?.forEach(genre => { %>
            <button type="button" class="btn btn-outline-warning round btn-sm">
              <%= genre %>
            </button>
            <% }); %>
          </div>
          <div class="episodes">
            <h2>Download Options</h2>
          </div>

          <% if (data.id.includes('-both')) { %>
          <!-- Toggle Button -->
          <div class="toggle-container" id="toggle-container">
            <button id="toggleDownloadOptions" class="btn btn-outline-info">
              Show Dub ðŸŽ¥
            </button>
          </div>

          <!-- Download Options (hidden initially) -->
          <div class="genres downloadOptions">
            <div class="subOptions" id="subOptions"></div>
            <div class="dubOptions" id="dubOptions" style="display: none"></div>
          </div>

          <script>
            // Function to create a download button for a given type (sub or dub)
            function createDownloadButton(type, episodes, id) {
              const togglecontainer = document.getElementById("toggle-container")
              // Create "Download from specific episodes" button
              const specificEpisodesBtn = document.createElement('button');
              specificEpisodesBtn.classList.add('btn', 'btn-outline-info', `${type}Options`);
              if (type === 'dub') {
                specificEpisodesBtn.style.display = 'none';
              }
              specificEpisodesBtn.textContent = `Download From Specific Episodes (${type.toUpperCase()})`;
              specificEpisodesBtn.setAttribute('data-ep', JSON.stringify(id.replace('-both', `-${type}`)));
              specificEpisodesBtn.setAttribute('data-total-episodes', episodes);
              togglecontainer.appendChild(specificEpisodesBtn)

               // Create "Download All Episodes" button
              const downloadAllBtn = document.createElement('button');
              downloadAllBtn.classList.add('btn', 'btn-outline-info', `${type}Options`);
              if (type === 'dub') {
                downloadAllBtn.style.display = 'none';
              }
              downloadAllBtn.type = 'button';
              downloadAllBtn.textContent = `Download All Episodes (${type.toUpperCase()})`;
              downloadAllBtn.setAttribute('onclick', `download('${id.replace('-both', `-${type}`)}', 1, ${episodes})`);
              togglecontainer.appendChild(downloadAllBtn);

              const container = document.getElementById(`${type}Options`);

              // Create episode-specific download buttons
              const episodeWrapper = document.createElement('div');
              episodeWrapper.classList.add('wrapper');
              const episodeContainer = document.createElement('div');
              episodeContainer.classList.add('episode-container');

              // Generate individual episode download buttons
              for (let i = episodes - 1; i >= 0; i--) {
                const episodeBtn = document.createElement('button');
                episodeBtn.classList.add('episode');
                episodeBtn.type = 'button';
                episodeBtn.textContent = `Download Episode ${i + 1} (${type.toUpperCase()})`;
                episodeBtn.setAttribute('onclick', `download('${id.replace('-both', `-${type}`)}', ${i + 1})`);
                episodeContainer.appendChild(episodeBtn);
              }

              episodeWrapper.appendChild(episodeContainer);
              container.appendChild(episodeWrapper);
            }

            // Call function to generate sub and dub options if data is available
            <% if (data?.subs > 0) { %>
              createDownloadButton('sub', <%= data?.subs %>, '<%= data.id %>');
            <% } %>
            <% if (data?.dubs > 0) { %>
              createDownloadButton('dub', <%= data?.dubs %>, '<%= data.id %>');
            <% } %>

            // Toggle functionality
            document.getElementById("toggleDownloadOptions").addEventListener("click", function () {
              const dubOptions = document.getElementsByClassName("dubOptions");
              const subOptions = document.getElementsByClassName("subOptions");
              const button = document.getElementById("toggleDownloadOptions");

              if (subOptions[0].style.display === "none") {
                // Show subs and hide dubs
                for (let i = 0; i < subOptions.length; i++) {
                  subOptions[i].style.display = "block";
                }
                for (let i = 0; i < dubOptions.length; i++) {
                  dubOptions[i].style.display = "none";
                }
                button.textContent = "Show Dub ðŸŽ¥";
              } else {
                // Show dubs and hide subs
                for (let i = 0; i < subOptions.length; i++) {
                  subOptions[i].style.display = "none";
                }
                for (let i = 0; i < dubOptions.length; i++) {
                  dubOptions[i].style.display = "block";
                }
                button.textContent = "Show Sub ðŸŽ­";
              }
            });
          </script>
          <% } else { %>
          <div class="genres">
            <button
              data-ep="<%= data.id %>"
              data-total-episodes="<%= data.totalEpisodes %>"
              class="btn btn-outline-secondary round download-form-button"
            >
              Download From Specific Episodes
            </button>
            <button
              id="downloadall"
              type="button"
              class="btn btn-outline-secondary round"
              onclick="download(<%= JSON.stringify(data.id) %>, 1, <%= data.totalEpisodes %>)"
            >
              Download All Episodes
            </button>
          </div>
          <div id="modal-root"></div>
          <div class="wrapper">
            <div class="episode-container">
              <% for (let i = data.episodes.length - 1; i >= 0; i--) { %>
              <button
                class="episode"
                type="button"
                onclick="download('<%= data.id %>', '<%= data.episodes[i].number %>')"
              >
                Download Episode <%= i + 1 %> <%= data?.subOrDub ?
                data.subOrDub.toUpperCase() : "" %>
              </button>
              <% } %>
            </div>
          </div>
          <% } %>
          <!-- Watch online 
            <br />
            <div class="video-player">
              <div class="description" id="now_playing" hidden>
                Now Playing :
              </div>
              <video
                id="vid1"
                class="video-js vjs-default-skin"
                controls
              ></video>
              <br />
               select video 
              <h4>Click on ep from list to start playing</h4>
              <div class="d-grid gap-2 episode-container scrollable-ele">
                <% let j = 1 %> <% data.episodes.forEach(ep => { %>
                <button
                  class="btn btn-success round"
                  type="button"
                  onclick="Videoplay('<%= data.id %>', <%= j %>)"
                >
                  Watch ep <%= j %>
                </button>
                <% j++; }); %>
              </div>
            </div> -->
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/videojs-http-source-selector@latest/dist/videojs-http-source-selector.min.js"></script>
    <script src="./video_player/video.min.js"></script>
    <script src="./video_player/videojs-contrib-quality-levels.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js"
      integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct"
      crossorigin="anonymous"
    ></script>

    <script src="download.js"></script>
    <script src="search.js"></script>
    <script src="info.js"></script>
    <!-- <script src="video_player/quality.js"></script> -->
    <!-- <script src="video_player/play.js"></script> -->
  </body>
</html>
